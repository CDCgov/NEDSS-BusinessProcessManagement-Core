#debug=true
#authorizations.security-constraints[0].authRoles[0]=${ACT_KEYCLOAK_USER_ROLE:ACTIVITI_USER}
#authorizations.security-constraints[0].securityCollections[0].patterns[0]=${ACT_KEYCLOAK_PATTERNS:/v1/*}
#authorizations.security-constraints[1].authRoles[0]=${ACT_KEYCLOAK_ADMIN_ROLE:ACTIVITI_ADMIN}
#authorizations.security-constraints[1].securityCollections[0].patterns[0]=/admin/*
#
spring.application.name=${RUNTIME_BUNDLE_APP_NAME:runtime-bundle-core}
#spring.jackson.serialization.fail-on-unwrapped-type-identifiers=${ACT_RB_JACKSON_FAIL_ON_UNWRAPPED_IDS:false}
#spring.sleuth.messaging.kafka.enabled=true
#spring.sleuth.messaging.rabbit.enabled=false
#management.health.rabbit.enabled=false
#
## this user needs to have the realm management roles assigned
#spring.cloud.stream.kafka.binder.required-acks=1
#spring.cloud.stream.kafka.binder.transaction.producer.sync=true
#spring.cloud.stream.kafka.binder.transaction.transaction-id-prefix=rbc-
#spring.cloud.stream.bindings.auditProducer.destination=engineEvents
#spring.cloud.stream.bindings.auditProducer.contentType=application/json
#
spring.kafka.bootstrap-servers=${RUNTIME_BUNDLE_CORE_KAFKA_BOOTSTRAP_SERVERS}
#
#spring.kafka.consumer.isolation-level=read_committed
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.enable-auto-commit=false
#
spring.kafka.producer.acks=all
#spring.kafka.producer.retries=1
#spring.kafka.producer.transaction-id-prefix=rbc-
#spring.kafka.listener.ack-count=1
#
#activiti.cloud.messaging.partition-count=1
activiti.cloud.application.name=${RUNTIME_BUNDLE_APP_NAME:runtime-bundle-core}
#activiti.cloud.swagger.rb-base-path=rb

#
#spring.jta.transaction-manager-id=runtime-bundle-core
#
#spring.activiti.useStrongUuids=true
## zipkin (set spring.zipkin.enabled to true to activate)
#spring.zipkin.enabled=false
#spring.zipkin.base-url=http://zipkin:80/
#spring.zipkin.sender.type=web
#spring.sleuth.sampler.probability=1.0
## project manifest path
#project.manifest.file.path=classpath:/default-project.json

spring.datasource.url=jdbc:postgresql://${RUNTIME_BUNDLE_CORE_DB_HOST}:${RUNTIME_BUNDLE_CORE_DB_PORT}/${RUNTIME_BUNDLE_CORE_DB_NAME}
spring.datasource.username=${RUNTIME_BUNDLE_CORE_DB_USERNAME}
spring.datasource.password=${RUNTIME_BUNDLE_CORE_DB_PASSWORD}
